/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *detectCycle(ListNode *head) {
        if(!head) return NULL;
        if(head == head -> next) return head;
        ListNode* slow = head;
        ListNode* fast = head;
        while(1)
        {
            if (!fast -> next || !fast -> next -> next) 
                return NULL;
            slow = slow -> next;
            fast = fast -> next -> next;
            if (slow == fast)
                break;
        } 
        slow = head;
        while(slow != fast)
        {
            slow = slow -> next;
            fast = fast -> next;
        } 
        return slow;


    }
};